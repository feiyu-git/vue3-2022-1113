<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<meta name="viewport" content="width=device-width">
<title>CodePen Embed - CodeMirror Learn</title>
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="XU9Rzllu7vqF3eLly6HsGPT1ZhVpt0l3nfCGbIsg1RYBzexdJzf8hTmK3q6zfEgUt6NCSOaUXr0xSLN/epqAxQ==">
<link rel="stylesheet" media="all" href="abBqPbW_data/embed-e30d69073af1bf5b38634d470a9e29eab2f18c3c8c92af6836b156.css">
<style>
    .hide {
      display: none !important;
    }

    #result-box {
      background: #111111;
      color: #eeeeee;
    }
    .embed-footer,
    .embed-nav {
      background: #111111;
      
    }
    .embed-nav .code-types a,
    .embed-nav .result-button-list a,
    .action-button {
      color: #eeeeee;
      background-color: #333333;
    }
    .embed-nav .code-types a.active,
    .embed-nav .result-button-list a.active,
    .action-button.active {
      background: #555555;
      color: #eeeeee;
      box-shadow: inset 0px 3px #797979;
    }
    .embed-nav .logo-wrap .edit-on-codepen {
      color: #eeeeee;
    }

    .embed-nav svg {
      stroke: #eeeeee !important;
    }
  </style>
<link rel="stylesheet" media="all" href="abBqPbW_data/twilight-b1245feb6421f4bced574a0dafb54ff98e3005abc90de9d5f16.css">
<meta name="monetization" content="$ilp.uphold.com/biyqg2MkQKbe">
</head>
<body id="the-body" style="border: 1px solid #666666; --borderWidth: 1px;" class="codepen-embed-body split-output static results-active">
<nav class="embed-nav group" id="embed-nav">
<ul class="code-types">
<li class="code-type">
<a id="html-link" href="#html-box" role="button" aria-pressed="false">
HTML
</a>
</li>
<li class="code-type">
<a id="css-link" href="#css-box" role="button" aria-pressed="false">
CSS
</a>
</li>
<li class="code-type">
<a id="js-link" href="#js-box" role="button" class="active" aria-pressed="true">
JS
</a>
</li>
</ul>
<ul class="result-button-list">
<li class="results results-type">
<a id="result-link" href="#result-box" class="active" aria-pressed="true" role="button">
Result
</a>
</li>
<li>
<a href="#resources-link" id="skip-results-iframe-link">Skip Results Iframe</a>
</li>
</ul>
<div class="logo-wrap" id="edit-area">
<a class="edit-on-codepen" target="_blank" rel="noopener" href="https://codepen.io/jiangmitiao/pen/abBqPbW" title="Edit on CodePen">
<div class="large-logo">
<span id="edit-on-text" class="open-on">EDIT ON</span>
<svg id="embed-codepen-logo" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 138 26" fill="none" stroke="#000" stroke-width="2.3" stroke-linecap="round" stroke-linejoin="round" role="img" aria-label="CodePen">
<path d="M80 6h-9v14h9m34-14h-9v14h9m-3-7h-6m-28 0h-6m51 7V6l11 14V6M22 16.7L33 24l11-7.3V9.3L33 2 22 9.3v7.4zm22 0L33 9.3l-11 7.4m0-7.4l11 7.3 11-7.3M33 2v7.3m0 7.4V24m55-10h6c2.2 0 4-1.8 4-4s-1.8-4-4-4h-6v14M15 8c-1.3-1.3-3-2-5-2-4 0-7 3-7 7s3 7 7 7c2 0 3.7-.8 5-2m49-5c0 4-3 7-7 7h-5V6h5c4 0 7 3 7 7z"></path>
</svg>
</div>
<div class="box-logo">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="20 0 26 26" fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2.3" role="img" aria-label="Edit on CodePen">
<path id="icon-codepen-box" d="M22 16.7L33 24l11-7.3V9.3L33 2 22 9.3v7.4zm22 0L33 9.3l-11 7.4m0-7.4l11 7.3 11-7.3M33 2v7.3m0 7.4V24"></path>
</svg>
</div>
</a>
</div>
</nav>
<div id="output" data-border-style="thin" data-header="true">
<div id="html-box" class="code-wrap code-box box " role="region" aria-label="HTML">
<pre tabindex="0"><code data-lang="htmlmixed" id="actual-html-code" class=" cm-s-default"><span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">div</span> <span class="cm-attribute">id</span>=<span class="cm-string">"app"</span><span class="cm-tag cm-bracket">&gt;</span>
    <span class="cm-tag cm-bracket">&lt;</span><span class="cm-tag">codemirror</span>
        <span class="cm-attribute">v-model</span>=<span class="cm-string">"code"</span>
        <span class="cm-attribute">ref</span>=<span class="cm-string">"cm"</span>
        <span class="cm-attribute">:options</span>=<span class="cm-string">"cmOption"</span>
                <span class="cm-attribute">@input</span>=<span class="cm-string">"inputChange"</span>
    <span class="cm-tag cm-bracket">&gt;</span><span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">codemirror</span><span class="cm-tag cm-bracket">&gt;</span>
<span class="cm-tag cm-bracket">&lt;/</span><span class="cm-tag">div</span><span class="cm-tag cm-bracket">&gt;</span></code></pre>
</div>
<div id="css-box" class="code-wrap code-box box " role="region" aria-label="CSS">
<pre tabindex="0"><code data-lang="css" id="actual-css-code" class=" cm-s-default"><span class="cm-qualifier">.autocomplete-div</span> {
    <span class="cm-property">display</span>: <span class="cm-atom">inline-block</span>;
    <span class="cm-property">width</span>: <span class="cm-number">100%</span>;
  }
  <span class="cm-qualifier">.autocomplete-name</span> {
    <span class="cm-property">display</span>: <span class="cm-atom">inline-block</span>;
  }
  <span class="cm-qualifier">.autocomplete-hint</span> {
    <span class="cm-property">display</span>: <span class="cm-atom">inline-block</span>;
    <span class="cm-property">float</span>: <span class="cm-atom">right</span>;
    <span class="cm-property">color</span>: <span class="cm-atom">#0088ff</span>;
    <span class="cm-property">margin-left</span>: <span class="cm-number">1em</span>;
  }</code></pre>
</div>
<div id="js-box" class="code-wrap code-box box active" role="region" aria-label="JS">
<pre tabindex="0"><code data-lang="javascript" id="actual-js-code" class=" cm-s-default"><span class="cm-keyword">function</span> <span class="cm-def">handleShowHint</span>(<span class="cm-def">cmInstance</span>, <span class="cm-def">hintOptions</span>) {
  <span class="cm-keyword">let</span> <span class="cm-def">cursor</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getCursor</span>();
  <span class="cm-keyword">let</span> <span class="cm-def">cursorLine</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getLine</span>(<span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span>);
  <span class="cm-keyword">let</span> <span class="cm-def">end</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cursor</span>.<span class="cm-property">ch</span>;
  <span class="cm-keyword">let</span> <span class="cm-def">start</span> <span class="cm-operator">=</span> <span class="cm-variable-2">end</span>;

  <span class="cm-keyword">let</span> <span class="cm-def">token</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getTokenAt</span>(<span class="cm-variable-2">cursor</span>);
  <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable-2">cmInstance</span>, <span class="cm-variable-2">cursor</span>, <span class="cm-variable-2">cursorLine</span>, <span class="cm-variable-2">end</span>, <span class="cm-variable-2">token</span>);
  <span class="cm-comment">// console.log(hintOptions.tables)</span>
  <span class="cm-comment">// return hintOptions.tables;</span>
  <span class="cm-keyword">return</span> {
    <span class="cm-property">list</span>: [<span class="cm-string">"hello"</span>, <span class="cm-string">"world"</span>],
    <span class="cm-property">from</span>: { <span class="cm-property">ch</span>: <span class="cm-variable-2">token</span>.<span class="cm-property">start</span>, <span class="cm-property">line</span>: <span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span> },
    <span class="cm-property">to</span>: { <span class="cm-property">ch</span>: <span class="cm-variable-2">token</span>.<span class="cm-property">end</span>, <span class="cm-property">line</span>: <span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span> }
  };
}

<span class="cm-keyword">function</span> <span class="cm-def">handleShowHint2</span>(<span class="cm-def">cmInstance</span>, <span class="cm-def">hintOptions</span>) {
  <span class="cm-keyword">let</span> <span class="cm-def">cursor</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getCursor</span>();
  <span class="cm-keyword">let</span> <span class="cm-def">cursorLine</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getLine</span>(<span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span>);
  <span class="cm-keyword">let</span> <span class="cm-def">end</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cursor</span>.<span class="cm-property">ch</span>;
  <span class="cm-keyword">let</span> <span class="cm-def">start</span> <span class="cm-operator">=</span> <span class="cm-variable-2">end</span>;

  <span class="cm-keyword">let</span> <span class="cm-def">token</span> <span class="cm-operator">=</span> <span class="cm-variable-2">cmInstance</span>.<span class="cm-property">getTokenAt</span>(<span class="cm-variable-2">cursor</span>);
  <span class="cm-variable">console</span>.<span class="cm-property">log</span>(<span class="cm-variable-2">cmInstance</span>, <span class="cm-variable-2">cursor</span>, <span class="cm-variable-2">cursorLine</span>, <span class="cm-variable-2">end</span>, <span class="cm-variable-2">token</span>);
  <span class="cm-keyword">return</span> {
    <span class="cm-property">list</span>: [
      {
        <span class="cm-property">text</span>: <span class="cm-string">"hello"</span>,
        <span class="cm-property">displayText</span>: <span class="cm-string">"你好呀"</span>,
        <span class="cm-property">displayInfo</span>: <span class="cm-string">"提示信息1"</span>,
        <span class="cm-property">render</span>: <span class="cm-keyword">this</span>.<span class="cm-property">hintRender</span>
      },
      {
        <span class="cm-property">text</span>: <span class="cm-string">"world"</span>,
        <span class="cm-property">displayText</span>: <span class="cm-string">"世界"</span>,
        <span class="cm-property">displayInfo</span>: <span class="cm-string">"提示信息2"</span>,
        <span class="cm-property">render</span>: <span class="cm-keyword">this</span>.<span class="cm-property">hintRender</span>
      }
    ],
    <span class="cm-property">from</span>: {
      <span class="cm-property">ch</span>: <span class="cm-variable-2">token</span>.<span class="cm-property">start</span>,
      <span class="cm-property">line</span>: <span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span>
    },
    <span class="cm-property">to</span>: {
      <span class="cm-property">ch</span>: <span class="cm-variable-2">token</span>.<span class="cm-property">end</span>,
      <span class="cm-property">line</span>: <span class="cm-variable-2">cursor</span>.<span class="cm-property">line</span>
    }
  };
}
<span class="cm-keyword">function</span> <span class="cm-def">hintRender</span>(<span class="cm-def">element</span>, <span class="cm-def">self</span>, <span class="cm-def">data</span>) {
  <span class="cm-keyword">let</span> <span class="cm-def">div</span> <span class="cm-operator">=</span> <span class="cm-variable">document</span>.<span class="cm-property">createElement</span>(<span class="cm-string">"div"</span>);
  <span class="cm-variable-2">div</span>.<span class="cm-property">setAttribute</span>(<span class="cm-string">"class"</span>, <span class="cm-string">"autocomplete-div"</span>);

  <span class="cm-keyword">let</span> <span class="cm-def">divText</span> <span class="cm-operator">=</span> <span class="cm-variable">document</span>.<span class="cm-property">createElement</span>(<span class="cm-string">"div"</span>);
  <span class="cm-variable-2">divText</span>.<span class="cm-property">setAttribute</span>(<span class="cm-string">"class"</span>, <span class="cm-string">"autocomplete-name"</span>);
  <span class="cm-variable-2">divText</span>.<span class="cm-property">innerText</span> <span class="cm-operator">=</span> <span class="cm-variable-2">data</span>.<span class="cm-property">displayText</span>;

  <span class="cm-keyword">let</span> <span class="cm-def">divInfo</span> <span class="cm-operator">=</span> <span class="cm-variable">document</span>.<span class="cm-property">createElement</span>(<span class="cm-string">"div"</span>);
  <span class="cm-variable-2">divInfo</span>.<span class="cm-property">setAttribute</span>(<span class="cm-string">"class"</span>, <span class="cm-string">"autocomplete-hint"</span>);
  <span class="cm-variable-2">divInfo</span>.<span class="cm-property">innerText</span> <span class="cm-operator">=</span> <span class="cm-variable-2">data</span>.<span class="cm-property">displayInfo</span>;

  <span class="cm-variable-2">div</span>.<span class="cm-property">appendChild</span>(<span class="cm-variable-2">divText</span>);
  <span class="cm-variable-2">div</span>.<span class="cm-property">appendChild</span>(<span class="cm-variable-2">divInfo</span>);
  <span class="cm-variable-2">element</span>.<span class="cm-property">appendChild</span>(<span class="cm-variable-2">div</span>);
}

<span class="cm-variable">Vue</span>.<span class="cm-property">use</span>(<span class="cm-variable">VueCodemirror</span>);

<span class="cm-keyword">new</span> <span class="cm-variable">Vue</span>({
  <span class="cm-property">el</span>: <span class="cm-string">"#app"</span>,
  <span class="cm-property">data</span>: {
    <span class="cm-property">code</span>: <span class="cm-string-2">`select a from table1 where b = 1`</span>,
    <span class="cm-property">cmOption</span>: {
      <span class="cm-comment">// 语言及语法模式</span>
      <span class="cm-property">mode</span>: <span class="cm-string">"text/x-sql"</span>,
      <span class="cm-comment">// 主题</span>
      <span class="cm-property">theme</span>: <span class="cm-string">"darcula"</span>,
      <span class="cm-comment">// 显示函数</span>
      <span class="cm-property">line</span>: <span class="cm-atom">true</span>,
      <span class="cm-property">lineNumbers</span>: <span class="cm-atom">true</span>,
      <span class="cm-comment">// 软换行</span>
      <span class="cm-property">lineWrapping</span>: <span class="cm-atom">true</span>,
      <span class="cm-comment">// tab宽度</span>
      <span class="cm-property">tabSize</span>: <span class="cm-number">4</span>,
      <span class="cm-comment">// 代码提示功能</span>
      <span class="cm-property">hintOptions</span>: {
        <span class="cm-comment">// 避免由于提示列表只有一个提示信息时，自动填充</span>
        <span class="cm-property">completeSingle</span>: <span class="cm-atom">false</span>,
        <span class="cm-property">hint</span>: <span class="cm-variable">handleShowHint2</span>
        <span class="cm-comment">// 不同的语言支持从配置中读取自定义配置 sql语言允许配置表和字段信息，用于代码提示</span>
        <span class="cm-comment">// tables: {</span>
        <span class="cm-comment">//   table1: ["c1", "c2"]</span>
        <span class="cm-comment">// }</span>
      },
      <span class="cm-comment">// 高亮行功能</span>
      <span class="cm-property">styleActiveLine</span>: <span class="cm-atom">true</span>
    }
  },
  <span class="cm-property">methods</span>: {
    <span class="cm-property">inputChange</span>(<span class="cm-def">content</span>) {
      <span class="cm-keyword">this</span>.<span class="cm-property">$nextTick</span>(() <span class="cm-operator">=&gt;</span> {
        <span class="cm-comment">// console.log("code:" + this.code);</span>
        <span class="cm-comment">// console.log("content:" + content);</span>
      });
    }
  },
  <span class="cm-property">computed</span>: {
    <span class="cm-property">cm</span>() {
      <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>.<span class="cm-property">$refs</span>.<span class="cm-property">cm</span>.<span class="cm-property">codemirror</span>;
    }
  },
  <span class="cm-property">mounted</span>() {
    <span class="cm-comment">// 代码提示功能 当用户有输入时，显示提示信息</span>
    <span class="cm-keyword">this</span>.<span class="cm-property">$refs</span>.<span class="cm-property">cm</span>.<span class="cm-property">codemirror</span>.<span class="cm-property">on</span>(<span class="cm-string">"inputRead"</span>, (<span class="cm-def">cm</span>) <span class="cm-operator">=&gt;</span> {
      <span class="cm-variable-2">cm</span>.<span class="cm-property">showHint</span>();
    });

    <span class="cm-keyword">this</span>.<span class="cm-property">$refs</span>.<span class="cm-property">cm</span>.<span class="cm-property">codemirror</span>.<span class="cm-property">setSize</span>(
      <span class="cm-string">"auto"</span>,
      <span class="cm-variable">Math</span>.<span class="cm-property">max</span>(<span class="cm-variable">document</span>.<span class="cm-property">documentElement</span>.<span class="cm-property">clientHeight</span> <span class="cm-operator">-</span> <span class="cm-number">20</span>, <span class="cm-number">200</span>) <span class="cm-operator">+</span> <span class="cm-string">"px"</span>
    );
    <span class="cm-keyword">this</span>.<span class="cm-property">$nextTick</span>(() <span class="cm-operator">=&gt;</span> {
      <span class="cm-variable">window</span>.<span class="cm-property">addEventListener</span>(<span class="cm-string">"resize"</span>, () <span class="cm-operator">=&gt;</span> {
        <span class="cm-comment">//监听浏览器窗口大小改变</span>
        <span class="cm-comment">//浏览器变化执行动作</span>
        <span class="cm-keyword">this</span>.<span class="cm-property">$refs</span>.<span class="cm-property">cm</span>.<span class="cm-property">codemirror</span>.<span class="cm-property">setSize</span>(
          <span class="cm-string">"auto"</span>,
          <span class="cm-variable">Math</span>.<span class="cm-property">max</span>(<span class="cm-variable">document</span>.<span class="cm-property">documentElement</span>.<span class="cm-property">clientHeight</span> <span class="cm-operator">-</span> <span class="cm-number">20</span>, <span class="cm-number">200</span>) <span class="cm-operator">+</span> <span class="cm-string">"px"</span>
        );
      });
    });
  }
});
</code></pre>
</div>
<div id="result-box" class="code-box active zoom-1" role="region" aria-label="Result">
<a href="https://codepen.io/jiangmitiao/embed/abBqPbW?default-tab=js%2Cresult&amp;theme-id=dark" class="overlay" style="background-image: url('https://shots.codepen.io/jiangmitiao/pen/abBqPbW-800.jpg?version=1614391262');"></a>
<a href="https://codepen.io/jiangmitiao/embed/abBqPbW?default-tab=js%2Cresult&amp;theme-id=dark" class="run-button">
<span>Run Pen</span>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
<path d="M58.097 52.127c-.431-.7-1.415-1.028-2.181-.732l-3.392 1.302c-.768.295-1.847.04-2.407-.565l-2.55-2.408c-.64-.518-.957-1.584-.706-2.367l1.104-3.46c.248-.782-.153-1.716-.891-2.075l-6.85-2.607c-.792-.224-1.712.21-2.047.96l-1.475 3.32c-.333.75-1.277 1.335-2.1 1.296l-3.508.108c-.816.08-1.795-.45-2.173-1.18l-1.668-3.227c-.375-.731-1.329-1.138-2.117-.906 0 0-1.85.547-3.454 1.267-1.606.72-3.244 1.74-3.244 1.74-.699.435-1.028 1.416-.735 2.184l1.307 3.392c.294.767.041 1.85-.564 2.406l-2.412 2.548c-.517.639-1.584.957-2.365.707l-3.46-1.104c-.782-.25-1.716.15-2.076.892l-2.607 6.85c-.222.792.21 1.71.96 2.045l3.32 1.474c.75.333 1.335 1.28 1.297 2.1l.106 3.508c.083.817-.448 1.796-1.178 2.173l-3.229 1.669c-.729.375-1.136 1.33-.904 2.119 0 0 .548 1.849 1.268 3.451.719 1.607 1.74 3.247 1.74 3.247.434.697 1.416 1.027 2.183.73l3.392-1.302c.767-.296 1.85-.04 2.406.563l2.552 2.411c.638.515.955 1.582.706 2.365l-1.104 3.46c-.251.784.15 1.718.89 2.077l6.85 2.608c.794.222 1.713-.211 2.046-.962l1.474-3.318c.335-.751 1.28-1.337 2.101-1.3l3.508-.104c.818-.084 1.795.449 2.173 1.18l1.665 3.23c.378.73 1.332 1.138 2.12.904 0 0 1.848-.548 3.454-1.268 1.605-.72 3.245-1.74 3.245-1.74.698-.434 1.027-1.416.733-2.185l-1.303-3.388c-.297-.768-.042-1.851.562-2.407l2.411-2.553c.521-.636 1.581-.955 2.365-.705l3.46 1.105c.784.25 1.719-.15 2.08-.889l2.604-6.852c.224-.79-.209-1.712-.96-2.047L57.2 70.396c-.751-.338-1.335-1.283-1.3-2.105l-.103-3.505c-.082-.82.449-1.799 1.18-2.173l3.227-1.668c.732-.375 1.139-1.332.906-2.117 0 0-.547-1.852-1.268-3.458-.724-1.606-1.746-3.243-1.746-3.243zm-21.593 21.75a7.33 7.33 0 01-9.691-3.686A7.33 7.33 0 0130.5 60.5a7.33 7.33 0 019.69 3.689 7.328 7.328 0 01-3.686 9.688z" class="gear-one"></path>
<path d="M94.205 26.616c-.1-.707-.763-1.315-1.478-1.351l-3.154-.156c-.716-.035-1.488-.619-1.717-1.296L86.677 21c-.325-.637-.203-1.593.27-2.129l2.097-2.36c.474-.535.485-1.419.022-1.965l-4.528-4.48c-.55-.457-1.435-.436-1.962.043l-2.342 2.119c-.527.479-1.485.61-2.124.29l-2.825-1.149c-.679-.223-1.268-.987-1.311-1.703l-.189-3.15c-.044-.714-.657-1.373-1.366-1.465 0 0-1.664-.216-3.194-.208-1.53.007-3.19.242-3.19.242-.705.098-1.314.764-1.352 1.477l-.154 3.153c-.035.716-.619 1.486-1.295 1.715l-2.814 1.18c-.638.326-1.595.204-2.129-.272l-2.36-2.093c-.533-.476-1.419-.484-1.965-.024l-4.482 4.528c-.453.55-.434 1.436.044 1.963l2.116 2.34c.483.53.613 1.489.295 2.125l-1.151 2.828c-.222.677-.99 1.269-1.7 1.311l-3.154.188c-.712.044-1.37.659-1.462 1.366 0 0-.217 1.665-.21 3.194.008 1.528.242 3.19.242 3.19.099.706.763 1.315 1.477 1.35l3.155.157c.713.034 1.485.618 1.716 1.294l1.177 2.814c.324.636.204 1.594-.27 2.128l-2.096 2.361c-.475.535-.484 1.419-.024 1.965l4.53 4.481c.55.456 1.434.437 1.962-.043l2.342-2.118c.528-.48 1.484-.61 2.123-.293l2.826 1.15c.68.223 1.268.989 1.314 1.702l.188 3.151c.043.715.657 1.372 1.366 1.465 0 0 1.662.215 3.192.207 1.529-.006 3.191-.24 3.191-.24.708-.099 1.317-.765 1.35-1.48l.157-3.15c.035-.715.618-1.487 1.296-1.717l2.813-1.178c.636-.324 1.595-.204 2.128.27l2.363 2.095c.533.474 1.417.484 1.963.023l4.481-4.528c.456-.55.437-1.433-.043-1.962l-2.118-2.341c-.481-.53-.611-1.487-.293-2.125l1.149-2.827c.222-.678.99-1.27 1.699-1.311l3.156-.19c.712-.042 1.37-.658 1.463-1.367 0 0 .214-1.662.209-3.192-.007-1.527-.241-3.189-.241-3.189zM69.391 37.203a7.27 7.27 0 11-.072-14.537 7.27 7.27 0 01.072 14.537z" class="gear-two"></path>
</svg>
</a>
</div>
<div id="about-box">
<div class="about-container">
<div class="about-user">
<a href="https://codepen.io/jiangmitiao" target="_blank" rel="noopener"><img src="abBqPbW_data/user-default-avatar.webp" loading="lazy" alt="" class="about-image"></a>
<div class="about-user-info">
<p>
This Pen is owned by <a href="https://codepen.io/jiangmitiao" target="_blank" rel="noopener">jiangmitiao</a> on <a href="https://codepen.io/" target="_blank" rel="noopener">CodePen</a>.
</p>
<p>
<a href="https://codepen.io/jiangmitiao" target="_blank" rel="noopener" class="about-user-more">
See more by @jiangmitiao on CodePen
</a>
</p>
</div>
</div>
</div>
</div>
<div id="resources-box" class="resources-box">
<h3>External CSS</h3>
<ol class="list-of-resources">
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/theme/darcula.css" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/theme/darcula.css</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/lib/codemirror.min.css" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/lib/codemirror.min.css</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/show-hint.css" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/show-hint.css</a>
</li>
</ol>
<h3>External JavaScript</h3>
<ol class="list-of-resources">
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/lib/codemirror.min.js" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/lib/codemirror.min.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js" target="_blank">https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/vue-codemirror@4.0.0/dist/vue-codemirror.js" target="_blank">https://cdn.jsdelivr.net/npm/vue-codemirror@4.0.0/dist/vue-codemirror.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/mode/sql/sql.js" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/mode/sql/sql.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/show-hint.js" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/show-hint.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/sql-hint.js" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/hint/sql-hint.js</a>
</li>
<li>
<a href="https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/selection/active-line.js" target="_blank">https://cdn.jsdelivr.net/npm/codemirror@5.59.4/addon/selection/active-line.js</a>
</li>
</ol>
</div>
</div>
<footer class="embed-footer" id="embed-footer">
<button id="resources-link" class="resources-link action-button bottom left" href="#resources-box" aria-pressed="false" role="button">
Resources
</button>
<ul class="scaling-choices bottom right">
<li><button class="action-button" id="zoom-button-1">1×</button></li>
<li><button class="action-button" id="zoom-button-05">0.5×</button></li>
<li><button class="action-button" id="zoom-button-025">0.25×</button></li>
</ul>
<button id="rerun-button" class="action-button rerun-button bottom right">
Rerun
</button>
</footer>
<script nonce="">
    __processedPen = {"html":"&lt;div id=&quot;app&quot;&gt;\n    &lt;codemirror\n        v-model=&quot;code&quot;\n        ref=&quot;cm&quot;\n        :options=&quot;cmOption&quot;\n                @input=&quot;inputChange&quot;\n    &gt;&lt;/codemirror&gt;\n&lt;/div&gt;","css":".autocomplete-div {\n    display: inline-block;\n    width: 100%;\n  }\n  .autocomplete-name {\n    display: inline-block;\n  }\n  .autocomplete-hint {\n    display: inline-block;\n    float: right;\n    color: #0088ff;\n    margin-left: 1em;\n  }","js":"function handleShowHint(cmInstance, hintOptions) {\n  let cursor = cmInstance.getCursor();\n  let cursorLine = cmInstance.getLine(cursor.line);\n  let end = cursor.ch;\n  let start = end;\n\n  let token = cmInstance.getTokenAt(cursor);\n  console.log(cmInstance, cursor, cursorLine, end, token);\n  // console.log(hintOptions.tables)\n  // return hintOptions.tables;\n  return {\n    list: [&quot;hello&quot;, &quot;world&quot;],\n    from: { ch: token.start, line: cursor.line },\n    to: { ch: token.end, line: cursor.line } };\n\n}\n\nfunction handleShowHint2(cmInstance, hintOptions) {\n  let cursor = cmInstance.getCursor();\n  let cursorLine = cmInstance.getLine(cursor.line);\n  let end = cursor.ch;\n  let start = end;\n\n  let token = cmInstance.getTokenAt(cursor);\n  console.log(cmInstance, cursor, cursorLine, end, token);\n  return {\n    list: [\n    {\n      text: &quot;hello&quot;,\n      displayText: &quot;你好呀&quot;,\n      displayInfo: &quot;提示信息1&quot;,\n      render: this.hintRender },\n\n    {\n      text: &quot;world&quot;,\n      displayText: &quot;世界&quot;,\n      displayInfo: &quot;提示信息2&quot;,\n      render: this.hintRender }],\n\n\n    from: {\n      ch: token.start,\n      line: cursor.line },\n\n    to: {\n      ch: token.end,\n      line: cursor.line } };\n\n\n}\nfunction hintRender(element, self, data) {\n  let div = document.createElement(&quot;div&quot;);\n  div.setAttribute(&quot;class&quot;, &quot;autocomplete-div&quot;);\n\n  let divText = document.createElement(&quot;div&quot;);\n  divText.setAttribute(&quot;class&quot;, &quot;autocomplete-name&quot;);\n  divText.innerText = data.displayText;\n\n  let divInfo = document.createElement(&quot;div&quot;);\n  divInfo.setAttribute(&quot;class&quot;, &quot;autocomplete-hint&quot;);\n  divInfo.innerText = data.displayInfo;\n\n  div.appendChild(divText);\n  div.appendChild(divInfo);\n  element.appendChild(div);\n}\n\nVue.use(VueCodemirror);\n\nnew Vue({\n  el: &quot;#app&quot;,\n  data: {\n    code: `select a from table1 where b = 1`,\n    cmOption: {\n      // 语言及语法模式\n      mode: &quot;text/x-sql&quot;,\n      // 主题\n      theme: &quot;darcula&quot;,\n      // 显示函数\n      line: true,\n      lineNumbers: true,\n      // 软换行\n      lineWrapping: true,\n      // tab宽度\n      tabSize: 4,\n      // 代码提示功能\n      hintOptions: {\n        // 避免由于提示列表只有一个提示信息时，自动填充\n        completeSingle: false,\n        hint: handleShowHint2\n        // 不同的语言支持从配置中读取自定义配置 sql语言允许配置表和字段信息，用于代码提示\n        // tables: {\n        //   table1: [&quot;c1&quot;, &quot;c2&quot;]\n        // }\n      },\n      // 高亮行功能\n      styleActiveLine: true } },\n\n\n  methods: {\n    inputChange(content) {\n      this.$nextTick(() =&gt; {\n        // console.log(&quot;code:&quot; + this.code);\n        // console.log(&quot;content:&quot; + content);\n      });\n    } },\n\n  computed: {\n    cm() {\n      return this.$refs.cm.codemirror;\n    } },\n\n  mounted() {\n    // 代码提示功能 当用户有输入时，显示提示信息\n    this.$refs.cm.codemirror.on(&quot;inputRead&quot;, cm =&gt; {\n      cm.showHint();\n    });\n\n    this.$refs.cm.codemirror.setSize(\n    &quot;auto&quot;,\n    Math.max(document.documentElement.clientHeight - 20, 200) + &quot;px&quot;);\n\n    this.$nextTick(() =&gt; {\n      window.addEventListener(&quot;resize&quot;, () =&gt; {\n        //监听浏览器窗口大小改变\n        //浏览器变化执行动作\n        this.$refs.cm.codemirror.setSize(\n        &quot;auto&quot;,\n        Math.max(document.documentElement.clientHeight - 20, 200) + &quot;px&quot;);\n\n      });\n    });\n  } });"};
    __preprocessors = {
      "html": "none",
      "css": "none",
      "js": "none"
    };
    __preprocessorNames = {
      "html": "HTML",
      "css": "CSS",
      "js": "JS"
    };
    __editable = false;
    __embed_prefill = false;
  </script>
<script src="abBqPbW_data/embed-59842fbf0495f2c0b079a7f4ce7544fb0912f3535856bf4dc5c205a.js"></script>


</body></html>